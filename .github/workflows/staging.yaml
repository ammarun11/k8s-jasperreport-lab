name: Dev/Staging Deployment

on:
  push:
    tags:
      - 'v*'

jobs:
  image-scanning:
    name: Scan Image Vulnerability
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: get version
        id: get-version
        run: |
          echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Scan Staging Odoo image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/bitnami/jasperreports:8.1.0'
          format: 'table'
          exit-code: '0'
          severity: 'MEDIUM,HIGH,CRITICAL'

  deploy-staging:
    name: Deploy Staging
    needs: [build-image, image-scanning]
    runs-on: self-hosted
    environment:
      name: Staging
    steps:
      - name: ArgoCD Deploy to Staging
        run: |
          argocd login --insecure  ${{ secrets.ARGOCD_SERVER }} --username  ${{ secrets.ARGOCD_USER }} --password  ${{ secrets.ARGOCD_PASS}}
          argocd app create jasperreport-server-stg --project default --repohttps://github.com/ammarun11/k8s-jasperreport-lab.git --revision dev --path ./deployment-manifest/staging --dest-namespace jasperreport-server-stg --dest-server https://kubernetes.default.svc --upsert
          argocd --grpc-web app sync jasperreport-server-stg --force
          argocd --grpc-web app wait jasperreport-server-stg --timeout 600

  # create-pr-prod:
  #   name: Create Pull Request to Production
  #   needs:  deploy-staging
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout staging branch
  #       uses: actions/checkout@v3
  #       with:
  #         ref: staging

  #     - name: Create pull request to production
  #       id: cpr
  #       uses: peter-evans/create-pull-request@v4
  #       with:
  #         token: ${{ secrets.API_TOKEN_GITHUB_FEBRY }}
  #         commit-message: Request Merge for Production branch
  #         title: Request Merge for Production branch
  #         body: Request Merge for Production branch
  #         base: staging
  #         labels: automated-pr, merge-to-prod
  #         branch: production

  #     - name: Check outputs
  #       if: ${{ steps.cpr.outputs.pull-request-number }}
  #       run: |
  #         echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
  #         echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
  #         echo "Pull Request Operation - ${{ steps.cpr.outputs.pull-request-operation }}"